[versions]
androidx-lifecycle = "2.9.0"
clikt = "5.0.3"
composeMultiplatform = "1.8.1"
#junit = "4.13.2"
kotlin = "2.1.21"
ktor = "3.1.3"
langchain = "1.0.1"
langchain-kotlin = "1.0.1-beta6"
logback = "1.5.18"
mongodb = "5.5.0"
jackson = "2.19.0"
markdown = "0.35.0"


[libraries]
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

clikt = {module = "com.github.ajalt.clikt:clikt", version.ref = "clikt"}
clikt-markdown = {module = "com.github.ajalt.clikt:clikt-markdown", version.ref = "clikt"}

jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-jsonSchema = { module = "com.fasterxml.jackson.module:jackson-module-jsonSchema", version.ref = "jackson" }

#junit = { module = "junit:junit", version.ref = "junit" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

ktor-serverContentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-serializationKotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serverCore = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-serverNetty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-serverTestHost = { module = "io.ktor:ktor-server-test-host-jvm", version.ref = "ktor" }

langchain4j = { module = "dev.langchain4j:langchain4j", version.ref = "langchain" }
langchain4j-kotlin = { module = "dev.langchain4j:langchain4j-kotlin", version.ref = "langchain-kotlin" }
langchain4j-openAi = { module = "dev.langchain4j:langchain4j-open-ai", version.ref = "langchain" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

mikepenz-markdown = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "markdown" }
mikepenz-markdownM3 = { module = "com.mikepenz:multiplatform-markdown-renderer-m3", version.ref = "markdown" }

#mongodb-bom = { module = "org.mongodb:mongodb-driver-bom", version.ref = "mongodb" }
mongodb-kotlin = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongodb" }


[plugins]
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }